# Generated by Django 2.1.5 on 2019-02-21 04:21

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick', models.CharField(max_length=10, null=True, verbose_name='昵称')),
                ('avatar', models.ImageField(null=True, upload_to='', verbose_name='头像')),
                ('tel', models.CharField(max_length=11, null=True, verbose_name='手机')),
                ('sex', models.SmallIntegerField(choices=[(0, '女'), (1, '男'), (2, '保密')], default=2, verbose_name='性别')),
                ('birthday', models.DateField(null=True, verbose_name='生日')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Addr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='收货人姓名')),
                ('address', models.CharField(max_length=100, verbose_name='收货详细地址')),
                ('postcode', models.CharField(max_length=20, verbose_name='邮编')),
                ('tel', models.CharField(max_length=11, verbose_name='联系电话')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户id')),
            ],
            options={
                'verbose_name': '收货地址',
                'verbose_name_plural': '收货地址',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='图片名')),
                ('title', models.CharField(max_length=20, verbose_name='标题')),
                ('img', models.ImageField(max_length=20, upload_to='picture/', verbose_name='图片')),
                ('note', models.CharField(max_length=20, verbose_name='说明')),
                ('ctime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '轮播图',
                'verbose_name_plural': '轮播图',
            },
        ),
        migrations.CreateModel(
            name='Good_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='图片名')),
                ('note', models.CharField(max_length=20, verbose_name='说明')),
                ('img', models.ImageField(upload_to='picture/', verbose_name='图片')),
                ('price1', models.FloatField(null=True, verbose_name='现价')),
                ('price2', models.FloatField(null=True, verbose_name='原价')),
                ('goods_type', models.CharField(max_length=20, null=True, verbose_name='商品种类')),
                ('count1', models.IntegerField(null=True, verbose_name='库存量')),
                ('count2', models.IntegerField(null=True, verbose_name='销售量')),
                ('desc', models.IntegerField(null=True, verbose_name='各个分类')),
                ('ctime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.Good_type', verbose_name='父id')),
            ],
            options={
                'verbose_name': '商品分类',
                'verbose_name_plural': '商品分类',
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='名称')),
                ('title', models.CharField(max_length=20, verbose_name='标题')),
                ('price', models.IntegerField(blank=True, null=True, verbose_name='价格')),
                ('name1', models.CharField(max_length=10, verbose_name='商品简写名称')),
                ('img1', models.ImageField(blank=True, null=True, upload_to='picture', verbose_name='商品图片')),
                ('note', models.CharField(max_length=100, verbose_name='商品说明')),
                ('url', models.CharField(blank=True, max_length=20, null=True, verbose_name='跳转地址')),
                ('good_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.Good_type', verbose_name='Good_type_id')),
            ],
            options={
                'verbose_name': '商品列表',
                'verbose_name_plural': '商品列表',
            },
        ),
        migrations.CreateModel(
            name='Shop_car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='名称')),
                ('goods', models.CharField(max_length=20, verbose_name='商品')),
                ('count', models.SmallIntegerField(verbose_name='数量')),
                ('price', models.CharField(max_length=5, verbose_name='现在的单价')),
                ('is_del', models.SmallIntegerField(choices=[(0, '是'), (1, '否')], verbose_name='是否删除')),
                ('ctime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '购物车',
                'verbose_name_plural': '购物车',
            },
        ),
    ]
